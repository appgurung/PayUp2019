
@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!--Sweet Alert CSS--->
<link href="@Url.Content("~/Content/sweetalert.css")" rel="stylesheet" />
<!--  Js Library  -->
<script src="../Theme/js/lib/jquery-2.1.1.js"></script>
<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>

<div class="col-sm-8 app-main-section">
    <div class="row">
        <div class="tile tile-blue kudi-header">
            <h2 class="title"><img src="/Theme/images/apps/my-payments.png"> API Keys &amp; Webhooks</h2>
        </div>
    </div>
    <input id="toggle-event" data-toggle="toggle" type="checkbox" style="text-align:center">
    <div id="console-event"></div>
    <script>
        $(function () {
            $('#toggle-event').change(function () {
                $('#console-event').html('Toggle: ' + $(this).prop('checked'))
            })
        })
    </script>
    <div class="margtop15">
        <p style="text-align:center">Test API Keys</p>

        <div class="well well-md m-t-sm ng-scope">
            <i class="icon-info pull-left text-muted fa-3x m-r-md"></i> Test keys should only be used for testing and
            setting up your application or website. They cannot be used to accept real payments.
        </div>

        <form action="" method="post" novalidate="novalidate">
            <div class="form-horizontal">
                <div class="form-group">
                    <label class="control-label col-md-2" for="Keys">Test Keys</label>
                    <div class="col-md-10">
                        <div class="input-group">
                            <div class="input-group-addon">Test Secrete Key</div>
                            <input type="text" class="form-control" id="TestSecreteKey" value="@ViewBag.TestSecretekey"  placeholder="Test Secrete Key">
                            <div class="input-group-addon">Copy</div>
                        </div>
                        <br/>
                        <div class="input-group">
                            <div class="input-group-addon">Test Public Key</div>
                            <input type="text" class="form-control" id="TestPublicKey" value="@ViewBag.TestPublickey"  placeholder="Test Public Key">
                             <div class="input-group-addon">Copy</div>
                        </div>
                    </div>
                </div>
                <p style="text-align:center">Test Webhooks</p>
                <div class="form-group">
                    <label class="control-label col-md-2" for="Email" style="font-size:9px">Test Callback URL</label>
                    <div class="col-md-10">
                        <input class="form-control text-box single-line" id="TestCallbackUrl" name="TestCallbackUrl" type="text">
                        <span class="field-validation-valid text-danger"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2" for="Phone" style="font-size:9px">Test Webhook URL</label>
                    <div class="col-md-10">
                        <input class="form-control text-box single-line" id="TestWebhookUrl" name="TestWebhookUrl" type="text">
                        <span class="field-validation-valid text-danger"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input value="SAVE" class="btn btn-default" type="button" id="TestDetails">
                    </div>
                </div>
            </div>
        </form>
        <hr />

        <p style="text-align:center">Live API Keys</p>

        <div class="well well-md m-t-sm ng-scope">
            <i class="icon-info pull-left text-muted fa-3x m-r-md"></i> Live keys should only be used for live payment for your application or website. They will not work for testing purpose.
        </div>

        <form action="" method="post" novalidate="novalidate">
            <div class="form-horizontal">
                <div class="form-group">
                    <label class="control-label col-md-2" for="FirstName">Live Keys</label>
                    <div class="col-md-10">
                        <div class="input-group">
                            <div class="input-group-addon">Live Secrete Key</div>
                            <input type="text" class="form-control" id="LiveSecreteKey" value="@ViewBag.LiveSecretekey"  placeholder="Live Secrete Key">
                            <div class="input-group-addon">Copy</div>
                        </div>
                        <br/>
                        <div class="input-group">
                            <div class="input-group-addon">Live Public Key</div>
                            <input type="text" class="form-control" id="LivePublicKey" value="@ViewBag.LivePublickey"  placeholder="Live Public Key">
                            <div class="input-group-addon">Copy</div>
                        </div>
                    </div>
                </div>
                <p style="text-align:center">Live Webhooks</p>
                <div class="form-group">
                    <label class="control-label col-md-2" for="Email" style="font-size:9px">Live Callback URL</label>
                    <div class="col-md-10">
                        <input class="form-control text-box single-line" id="LiveCallbackUrl" name="TestCallbackUrl" type="text">
                        <span class="field-validation-valid text-danger"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2" for="Phone" style="font-size:9px">Live Webhook URL</label>
                    <div class="col-md-10">
                        <input class="form-control text-box single-line" id="LiveWebhookUrl" name="TestWebhookUrl" type="text">
                        <span class="field-validation-valid text-danger"></span>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input value="SAVE" class="btn btn-default" type="button" id="LiveDetails">
                    </div>
                </div>
            </div>
        </form>
        <br />
    </div>
</div>
<!--Sweet Alert JS-->
<script src="@Url.Content("~/Scripts/sweetalert.js")"></script>
<script>
    if (@ViewBag.Gender == "Male")
    {
        document.getElementById("Gender").selectedIndex = 1;
    }
    else if(@ViewBag.Gender == "Female") {
        document.getElementById("Gender").selectedIndex = 2;
    }
    else if(@ViewBag.Gender == "")
    {
        document.getElementById("Gender").selectedIndex = 1;
    }
</script>


<script>
    $(document).ready(function () {
        document.getElementById("Submit").onclick = function () {
            $("#loader").css({ "display": "block" });
            document.getElementById("Submit").innerText = "Updating Profile..."

            document.getElementById("Submit").disabled = true;

            $.ajax({

                url: '/Account/ProfileUpdate',
                type: "POST",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    FirstName: $('#FirstName').val(),
                    LastName: $('#LastName').val(),
                    Address: $('#Address').val(),
                    Gender: $('#Gender').val(),
                }),
                success: function (result) {
                    $("#loader").css({ "display": "none" });
                    document.getElementById("Submit").innerText = "Update Profile"
                    document.getElementById("Submit").disabled = false
                    if (result.ResponseCode === 00) {

                        swal({
                            title: "Profile Update Successful",
                            text: result.Message,
                            type: "success",
                            confirmButtonText: "Exit"
                        },
                            function (isConfirm) {
                                if (isConfirm) {
                                    window.location.href = "/Account/MyProfile";
                                }
                            });

                    }

                },
                error: function (result) {
                    $("#loader").css({ "display": "none" });
                    document.getElementById("Submit").innerText = "Update Profile"

                    document.getElementById("Submit").disabled = false
                    swal({
                        title: "Error",
                        text: "Client Side Error, please check internet connection",
                        type: "error"
                    });
                }
            })
        }
    });


</script>